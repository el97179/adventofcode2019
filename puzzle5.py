input_array = [3, 225, 1, 225, 6, 6, 1100, 1, 238, 225, 104, 0, 1102, 45, 16, 225, 2, 65, 191, 224, 1001, 224, -3172, 224, 4, 224, 102, 8, 223, 223, 1001, 224, 5, 224, 1, 223, 224, 223, 1102, 90, 55, 225, 101, 77, 143, 224, 101, -127, 224, 224, 4, 224, 102, 8, 223, 223, 1001, 224, 7, 224, 1, 223, 224, 223, 1102, 52, 6, 225, 1101, 65, 90, 225, 1102, 75, 58, 225, 1102, 53, 17, 224, 1001, 224, -901, 224, 4, 224, 1002, 223, 8, 223, 1001, 224, 3, 224, 1, 224, 223, 223, 1002, 69, 79, 224, 1001, 224, -5135, 224, 4, 224, 1002, 223, 8, 223, 1001, 224, 5, 224, 1, 224, 223, 223, 102, 48, 40, 224, 1001, 224, -2640, 224, 4, 224, 102, 8, 223, 223, 1001, 224, 1, 224, 1, 224, 223, 223, 1101, 50, 22, 225, 1001, 218, 29, 224, 101, -119, 224, 224, 4, 224, 102, 8, 223, 223, 1001, 224, 2, 224, 1, 223, 224, 223, 1101, 48, 19, 224, 1001, 224, -67, 224, 4, 224, 102, 8, 223, 223, 1001, 224, 6, 224, 1, 223, 224, 223, 1101, 61, 77, 225, 1, 13, 74, 224, 1001, 224, -103, 224, 4, 224, 1002, 223, 8, 223, 101, 3, 224, 224, 1, 224, 223, 223, 1102, 28, 90, 225, 4, 223, 99, 0, 0, 0, 677, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1105, 0, 99999, 1105, 227, 247, 1105, 1, 99999, 1005, 227, 99999, 1005, 0, 256, 1105, 1, 99999, 1106, 227, 99999, 1106, 0, 265, 1105, 1, 99999, 1006, 0, 99999, 1006, 227, 274, 1105, 1, 99999, 1105, 1, 280, 1105, 1, 99999, 1, 225, 225, 225, 1101, 294, 0, 0, 105, 1, 0, 1105, 1, 99999, 1106, 0, 300, 1105, 1, 99999, 1, 225, 225, 225, 1101, 314, 0, 0, 106, 0, 0, 1105, 1, 99999, 7, 226, 677, 224, 102, 2, 223, 223, 1005, 224, 329, 1001, 223, 1, 223, 8, 226, 677, 224, 1002, 223, 2, 223, 1005, 224, 344, 101, 1, 223, 223, 8,
               226, 226, 224, 1002, 223, 2, 223, 1006, 224, 359, 101, 1, 223, 223, 1008, 677, 226, 224, 1002, 223, 2, 223, 1005, 224, 374, 1001, 223, 1, 223, 108, 677, 677, 224, 1002, 223, 2, 223, 1005, 224, 389, 1001, 223, 1, 223, 1107, 226, 677, 224, 1002, 223, 2, 223, 1006, 224, 404, 101, 1, 223, 223, 1008, 226, 226, 224, 102, 2, 223, 223, 1006, 224, 419, 1001, 223, 1, 223, 7, 677, 226, 224, 1002, 223, 2, 223, 1005, 224, 434, 101, 1, 223, 223, 1108, 226, 226, 224, 1002, 223, 2, 223, 1005, 224, 449, 101, 1, 223, 223, 7, 226, 226, 224, 102, 2, 223, 223, 1005, 224, 464, 101, 1, 223, 223, 108, 677, 226, 224, 102, 2, 223, 223, 1005, 224, 479, 1001, 223, 1, 223, 1007, 677, 226, 224, 1002, 223, 2, 223, 1006, 224, 494, 1001, 223, 1, 223, 1007, 677, 677, 224, 1002, 223, 2, 223, 1006, 224, 509, 1001, 223, 1, 223, 107, 677, 677, 224, 1002, 223, 2, 223, 1005, 224, 524, 101, 1, 223, 223, 1108, 226, 677, 224, 102, 2, 223, 223, 1006, 224, 539, 1001, 223, 1, 223, 8, 677, 226, 224, 102, 2, 223, 223, 1005, 224, 554, 101, 1, 223, 223, 1007, 226, 226, 224, 102, 2, 223, 223, 1006, 224, 569, 1001, 223, 1, 223, 107, 677, 226, 224, 102, 2, 223, 223, 1005, 224, 584, 1001, 223, 1, 223, 108, 226, 226, 224, 102, 2, 223, 223, 1006, 224, 599, 1001, 223, 1, 223, 107, 226, 226, 224, 1002, 223, 2, 223, 1006, 224, 614, 1001, 223, 1, 223, 1108, 677, 226, 224, 1002, 223, 2, 223, 1005, 224, 629, 1001, 223, 1, 223, 1107, 677, 677, 224, 102, 2, 223, 223, 1005, 224, 644, 1001, 223, 1, 223, 1008, 677, 677, 224, 102, 2, 223, 223, 1005, 224, 659, 101, 1, 223, 223, 1107, 677, 226, 224, 1002, 223, 2, 223, 1006, 224, 674, 101, 1, 223, 223, 4, 223, 99, 226]

# input_array = [1002, 4, 3, 4, 33]
# input_array = [1101, 100, -1, 4, 0]
# input_array = [3, 9, 8, 9, 10, 9, 4, 9, 99, -1, 8]
# input_array = [3, 9, 7, 9, 10, 9, 4, 9, 99, -1, 8]
# input_array = [3, 3, 1108, -1, 8, 3, 4, 3, 99]
# input_array = [3, 3, 1107, -1, 8, 3, 4, 3, 99]
# input_array = [3, 12, 6, 12, 15, 1, 13, 14, 13, 4, 13, 99, -1, 0, 1, 9]
# input_array = [3, 3, 1105, -1, 9, 1101, 0, 0, 12, 4, 12, 99, 1]
# input_array = [3, 21, 1008, 21, 8, 20, 1005, 20, 22, 107, 8, 21, 20, 1006, 20, 31, 1106, 0, 36, 98, 0, 0,
#                1002, 21, 125, 20, 4, 20, 1105, 1, 46, 104, 999, 1105, 1, 46, 1101, 1000, 1, 20, 4, 20, 1105, 1, 46, 98, 99]


def get_digits(opcode):
    d1 = opcode % 10
    d2 = int((opcode % 100 - d1) / 10)
    d3 = int((opcode % 1000 - d1 - 10*d2) / 100)
    d4 = int((opcode % 10000 - d1 - 10*d2 - 100*d3) / 1000)
    d5 = int((opcode % 100000 - d1 - 10*d2 - 100*d3 - 1000*d4) / 10000)
    d12 = d1 + 10*d2
    return d12, d3, d4, d5


def change_input_array(input_array, noun, verb):
    output = input_array[:]
    output[1] = noun
    output[2] = verb
    return output


def int_code(array):
    ind = 0
    out_of_index = False
    while input_array[ind] != 99:
        try:
            if ind < 0 or ind > len(input_array):
                out_of_index = True
                break
            opcode, param_mode1, param_mode2, param_mode3 = get_digits(array[ind])
            param1 = (array[ind+1] if param_mode1 else array[array[ind+1]])

            if opcode == 1:
                param2 = (array[ind+2] if param_mode2 else array[array[ind+2]])
                address = ind+3 if param_mode3 else array[ind+3]
                array[address] = param1 + param2
                ind += 4
            elif opcode == 2:
                param2 = (array[ind+2] if param_mode2 else array[array[ind+2]])
                address = ind+3 if param_mode3 else array[ind+3]
                array[address] = param1 * param2
                ind += 4
            elif opcode == 3:
                value = int(input("Insert value... "))
                array[array[ind+1]] = value
                ind += 2
            elif opcode == 4:
                value = param1
                print(value)
                ind += 2
            elif opcode == 5:
                param2 = (array[ind+2] if param_mode2 else array[array[ind+2]])
                if param1 != 0:
                    ind = param2
                else:
                    ind += 3
            elif opcode == 6:
                param2 = (array[ind+2] if param_mode2 else array[array[ind+2]])
                if param1 == 0:
                    ind = param2
                else:
                    ind += 3
            elif opcode == 7:
                param2 = (array[ind+2] if param_mode2 else array[array[ind+2]])
                address = ind+3 if param_mode3 else array[ind+3]
                if param1 < param2:
                    array[address] = 1
                else:
                    array[address] = 0
                ind += 4
            elif opcode == 8:
                param2 = (array[ind+2] if param_mode2 else array[array[ind+2]])
                address = ind+3 if param_mode3 else array[ind+3]
                if param1 == param2:
                    array[address] = 1
                else:
                    array[address] = 0
                ind += 4
            elif opcode == 99:
                break
        except Exception as e:
            print(e)
            out_of_index = True
            break
    return array, out_of_index


opcode, param_mode1, param_mode2, param_mode3 = get_digits(1002)

# array = change_input_array(input_array, 12, 2)
array = input_array[:]

output, out_of_index_flag = int_code(array)
# print(output)
